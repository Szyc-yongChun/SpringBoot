Spring-data-jpa实现了面向接口的编写方式，只需要通过编写一个继承自JpaRepository的接口就能完成数据访问

spring.jpa.properties.hibernate.hbm2ddl.auto=XXX
是hibernate的配置属性，其主要作用是：自动创建、更新、验证数据库表结构
     create
         每次加载hibernate时都会删除上一次的生成的表，然后根据你的model类再重新来生成新表，
         哪怕两次没有任何改变也要这样执行，这就是导致数据库表数据丢失的一个重要原因。
         
     create-drop
         每次加载hibernate时根据model类生成表，但是sessionFactory一关闭,表就自动删除
         
     update
         最常用的属性，第一次加载hibernate时根据model类会自动建立起表的结构（前提是先建立好数据库），
         以后加载hibernate时根据model类自动更新表结构，即使表结构改变了但表中的行仍然存在不会删除以前的行。
         要注意的是当部署到服务器后，表结构是不会被马上建立起来的，是要等应用第一次运行起来后才会。
         
     validate
         每次加载hibernate时，验证创建数据库表结构，只会和数据库中的表进行比较，不会创建新表，但是会插入新值


通过查看JpaRepository接口的API文档，可以看到该接口本身已经实现了创建（save）、更新（save）、删除（delete）、
查询（findAll、findOne）等基本操作的函数，因此对于这些基础操作的数据访问就不需要开发者再自己定义。

Spring-data-jpa的一大特性：通过解析方法名创建查询
也提供通过使用@Query 注解来创建查询，您只需要编写JPQL语句

##################################################################################
                                                                           配置多数据源的总结
1）、需要在配置文件中配置多个数据库连接信息

2）、通过@Configuration注释类加载数据库信息并生成对应的数据源，使用@Bean注释把数据源注册到Ioc容器中

3）、在spring-data-jpa中，暂时不清楚具体的框架流程
     
     注：
     A、多数据源配置中，实体和Repositry需要按数据源划分开，否则如果@Primary注解将使用默认数据完成数据库操作




 